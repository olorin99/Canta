#ifndef CANTA_ENUMS_H
#define CANTA_ENUMS_H

#include <volk.h>

namespace canta {

    enum class Error {
        HOST_MEMORY = VK_ERROR_OUT_OF_HOST_MEMORY,
        DEVICE_MEMORY = VK_ERROR_OUT_OF_DEVICE_MEMORY,
        DEVICE_LOST = VK_ERROR_DEVICE_LOST,
        EXTENSION_NOT_PRESENT = VK_ERROR_EXTENSION_NOT_PRESENT,
        FEATURE_NOT_PRESENT = VK_ERROR_FEATURE_NOT_PRESENT,

        INVALID_GPU = 0x1000000
    };

    enum class PhysicalDeviceType {
        OTHER = VK_PHYSICAL_DEVICE_TYPE_OTHER,
        INTEGRATED = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU,
        DISCRETE = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU,
        VIRTUAL = VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU,
        CPU = VK_PHYSICAL_DEVICE_TYPE_CPU,
    };

    enum class QueueType {
        NONE = 0,
        GRAPHICS = VK_QUEUE_GRAPHICS_BIT,
        COMPUTE = VK_QUEUE_COMPUTE_BIT,
        TRANSFER = VK_QUEUE_TRANSFER_BIT,
        SPARSE_BINDING = VK_QUEUE_SPARSE_BINDING_BIT,
        PRESENT = 0x20
    };

    enum class PresentMode {
        IMMEDIATE = VK_PRESENT_MODE_IMMEDIATE_KHR,
        MAILBOX = VK_PRESENT_MODE_MAILBOX_KHR,
        FIFO = VK_PRESENT_MODE_FIFO_KHR,
        FIFI_RELAXED = VK_PRESENT_MODE_FIFO_RELAXED_KHR,
        SHARED_DEMAND = VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR,
        SHARED_CONTINUOUS = VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR
    };

}

#endif //CANTA_ENUMS_H
